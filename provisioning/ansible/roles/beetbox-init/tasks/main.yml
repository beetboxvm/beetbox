---
- name: Set hostname.
  hostname:
    name: "{{ beet_domain }}"
  when: ansible_virtualization_type != 'docker'

- name: Add domains and aliases to hosts file.
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: "127.0.0.1 localhost {{ beet_domain }} {{ beet_aliases | join(' ') }}"
    owner: root
    group: root
    mode: 0644
  failed_when: false

- name: Update apt cache if needed.
  apt: update_cache=yes cache_valid_time=86400
  failed_when: false

- name: Get software for Python-based control.
  apt: "name={{ item }} state=installed"
  with_items:
    - curl
    - python-apt
    - python-httplib2
    - python-pycurl
    - build-essential

- name: Disable the ufw firewall (since we use a simple iptables firewall).
  service: name=ufw state=stopped
  failed_when: false

- name: Ensure beet_root directory exists.
  file:
    path: "{{ beet_root }}"
    state: directory
    mode: 0775
  become: no
  when: "beet_root is defined and {{ beet_root_create }}"

- name: Ensure workspace directory exists.
  file:
    path: "{{ workspace }}"
    state: directory
    mode: 0775
  when: workspace is defined

- name: Set SSH home directory.
  lineinfile:
    dest: "/home/{{ beet_user }}/.bashrc"
    state: present
    create: yes
    regexp: "^SSH_HOME="
    line: "SSH_HOME={{ beet_ssh_home }} && [ -e $SSH_HOME ] && cd $SSH_HOME"
  become: no
  when: beet_ssh_home is defined

- name: Set PATH for Composer vendor binaries.
  lineinfile:
    dest: "/home/{{ beet_user }}/.bashrc"
    state: present
    create: yes
    regexp: "^\\s*export PATH=\"{{ path_item | regex_escape() }}:\\$PATH\""
    line: |
      # Add Composer vendor binaries to PATH.
      if [ -d "{{ path_item }}" ]; then
        export PATH="{{ path_item }}:$PATH";
      fi
    owner: "{{ beet_user }}"
    group: "{{ beet_user }}"
    mode: 0644
  with_first_found:
    - files:
      - "vendor/bin"
      paths:
      - "{{ beet_base }}"
      - "{{ beet_root }}"
      - "{{ beet_web }}"
      - "{{ composer_home_path }}"
      skip: true
  loop_control:
    loop_var: path_item
  when: "{{ installed_extras_composer }}"
